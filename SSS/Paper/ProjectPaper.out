\BOOKMARK [1][-]{section.1}{Introduction and Background}{}% 1
\BOOKMARK [2][-]{subsection.1.1}{Project Environment Details}{section.1}% 2
\BOOKMARK [2][-]{subsection.1.2}{The Graphics Pipeline}{section.1}% 3
\BOOKMARK [3][-]{subsubsection.1.2.1}{The Vertex Shader}{subsection.1.2}% 4
\BOOKMARK [3][-]{subsubsection.1.2.2}{The Pixel/Fragment Shader}{subsection.1.2}% 5
\BOOKMARK [2][-]{subsection.1.3}{Parallel Programming}{section.1}% 6
\BOOKMARK [3][-]{subsubsection.1.3.1}{Shared Resources}{subsection.1.3}% 7
\BOOKMARK [3][-]{subsubsection.1.3.2}{Synchronization and Barriers}{subsection.1.3}% 8
\BOOKMARK [2][-]{subsection.1.4}{Pixel Synchronization}{section.1}% 9
\BOOKMARK [3][-]{subsubsection.1.4.1}{What is Pixel Synchronization?}{subsection.1.4}% 10
\BOOKMARK [3][-]{subsubsection.1.4.2}{How Pixel Synchronization Works in Code}{subsection.1.4}% 11
\BOOKMARK [1][-]{section.2}{Simple Subsurface Scattering}{}% 12
\BOOKMARK [2][-]{subsection.2.1}{What is Subsurface Scattering?}{section.2}% 13
\BOOKMARK [2][-]{subsection.2.2}{Previous Implementations}{section.2}% 14
\BOOKMARK [3][-]{subsubsection.2.2.1}{Wrapping Approximation}{subsection.2.2}% 15
\BOOKMARK [3][-]{subsubsection.2.2.2}{Depth Mapping}{subsection.2.2}% 16
\BOOKMARK [2][-]{subsection.2.3}{Pixel Synchronization Accelerated Depth Mapping}{section.2}% 17
\BOOKMARK [3][-]{subsubsection.2.3.1}{In-Depth Description of Implementation}{subsection.2.3}% 18
\BOOKMARK [1][-]{section.3}{Refraction}{}% 19
\BOOKMARK [2][-]{subsection.3.1}{"Fake" Convex Object Refraction}{section.3}% 20
\BOOKMARK [3][-]{subsubsection.3.1.1}{Vertex Shader}{subsection.3.1}% 21
\BOOKMARK [2][-]{subsection.3.2}{Better Convex Refraction With Pixel Synchronization}{section.3}% 22
\BOOKMARK [3][-]{subsubsection.3.2.1}{Shader-Based Description of Implementation}{subsection.3.2}% 23
\BOOKMARK [1][-]{section.4}{Findings}{}% 24
\BOOKMARK [2][-]{subsection.4.1}{Performance Metrics}{section.4}% 25
\BOOKMARK [3][-]{subsubsection.4.1.1}{Raw Performance Check of Pixel Synchronization}{subsection.4.1}% 26
\BOOKMARK [3][-]{subsubsection.4.1.2}{Subsurface Scattering}{subsection.4.1}% 27
\BOOKMARK [3][-]{subsubsection.4.1.3}{Refraction}{subsection.4.1}% 28
\BOOKMARK [1][-]{section.5}{Observations}{}% 29
\BOOKMARK [2][-]{subsection.5.1}{Creating and Using Unordered Access Views}{section.5}% 30
\BOOKMARK [2][-]{subsection.5.2}{Unordered Access View Limitations and Recommendations}{section.5}% 31
\BOOKMARK [2][-]{subsection.5.3}{Pixel Synchronization Behavior}{section.5}% 32
\BOOKMARK [2][-]{subsection.5.4}{Coding and Behavior Quirks}{section.5}% 33
\BOOKMARK [3][-]{subsubsection.5.4.1}{Working With the GPU Device on the Application Side}{subsection.5.4}% 34
\BOOKMARK [3][-]{subsubsection.5.4.2}{Pipeline Behavior}{subsection.5.4}% 35
\BOOKMARK [3][-]{subsubsection.5.4.3}{Placement of Pixel Synchronization call}{subsection.5.4}% 36
\BOOKMARK [3][-]{subsubsection.5.4.4}{Vertices are Still the Bottleneck}{subsection.5.4}% 37
\BOOKMARK [2][-]{subsection.5.5}{Suggestions and Advice When Using Pixel Synchronization}{section.5}% 38
\BOOKMARK [2][-]{subsection.5.6}{General Suggestions and Advice}{section.5}% 39
\BOOKMARK [1][-]{section.6}{Conclusion and Recommended Future Work}{}% 40
\BOOKMARK [2][-]{subsection.6.1}{Conclusions About the Utility of Pixel Synchronization}{section.6}% 41
\BOOKMARK [3][-]{subsubsection.6.1.1}{Key Observations}{subsection.6.1}% 42
\BOOKMARK [2][-]{subsection.6.2}{What the Findings Mean}{section.6}% 43
\BOOKMARK [2][-]{subsection.6.3}{Where to Go From Here}{section.6}% 44
\BOOKMARK [3][-]{subsubsection.6.3.1}{Finding a Viable Workaround for Looping Over UAVs}{subsection.6.3}% 45
\BOOKMARK [3][-]{subsubsection.6.3.2}{Pixel Synch Used With Geometry Shaders}{subsection.6.3}% 46
\BOOKMARK [3][-]{subsubsection.6.3.3}{Hack the Pipeline and Use Pixel Synchronization for Parallel Algorithms}{subsection.6.3}% 47
\BOOKMARK [3][-]{subsubsection.6.3.4}{Benchmarking the Efficiency of Pixel Ordering/Interlock on Discrete Hardware, Compared to an Integrated Grahpics Architecture}{subsection.6.3}% 48
\BOOKMARK [1][-]{section.7}{Implementation Discussion}{}% 49
\BOOKMARK [2][-]{subsection.7.1}{Boilerplate Code}{section.7}% 50
\BOOKMARK [3][-]{subsubsection.7.1.1}{Defining our Window}{subsection.7.1}% 51
\BOOKMARK [3][-]{subsubsection.7.1.2}{Direct3D Setup}{subsection.7.1}% 52
\BOOKMARK [3][-]{subsubsection.7.1.3}{Constant Buffer Values Explained}{subsection.7.1}% 53
\BOOKMARK [2][-]{subsection.7.2}{SubSurface Scattering Shader Walkthrough}{section.7}% 54
\BOOKMARK [3][-]{subsubsection.7.2.1}{Pass 1}{subsection.7.2}% 55
\BOOKMARK [3][-]{subsubsection.7.2.2}{Pass 2}{subsection.7.2}% 56
\BOOKMARK [3][-]{subsubsection.7.2.3}{Pass 3}{subsection.7.2}% 57
\BOOKMARK [2][-]{subsection.7.3}{Bad Render Function and Shader Walkthrough}{section.7}% 58
\BOOKMARK [3][-]{subsubsection.7.3.1}{Culling Demo Render Function and Shader Walkthrough}{subsection.7.3}% 59
\BOOKMARK [2][-]{subsection.7.4}{Refraction Attempt}{section.7}% 60
\BOOKMARK [3][-]{subsubsection.7.4.1}{Overview of Implementation}{subsection.7.4}% 61
\BOOKMARK [1][-]{section.8}{Images of Results}{}% 62
